// Generated by SandPiper(TM) 1.11-2021/01/28-beta from Redwood EDA.
// (Installed here: /usr/local/mono/sandpiper/distro.)
// Redwood EDA does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


`include "sandpiper_gen.vh"





//
// Signals declared top-level.
//

// For $in1.
logic [6:0] L0_in1_a0;

// For $in2.
logic [6:0] L0_in2_a0;

// For $in3.
logic [4:0] L0_in3_a0;

// For $in4.
logic [4:0] L0_in4_a0;

// For $in5.
logic [7:0] L0_in5_a0;

// For $in6.
logic [7:0] L0_in6_a0;

// For $out1.
logic [7:0] L0_out1_a0;

// For $out2.
logic [7:0] L0_out2_a0;

// For $out3.
logic [7:0] L0_out3_a0;

// For $out4.
logic [7:0] L0_out4_a0;

// For $r_in1.
logic [31:0] L0_r_in1_n1,
             L0_r_in1_a0;

// For $r_in2.
logic [31:0] L0_r_in2_n1,
             L0_r_in2_a0;

// For $r_in3.
logic [31:0] L0_r_in3_n1,
             L0_r_in3_a0;

// For $r_in4.
logic [31:0] L0_r_in4_n1,
             L0_r_in4_a0;

// For $r_in5.
logic [31:0] L0_r_in5_n1,
             L0_r_in5_a0;

// For $r_in6.
logic [31:0] L0_r_in6_n1,
             L0_r_in6_a0;

// For $reset.
logic L0_reset_a0;



generate

   // For signal $in1, which had no assignment.
   // Assign to a random value.
   // verilator lint_save
   // verilator lint_off WIDTH
   assign L0_in1_a0[6:0] = L0_r_in1_a0;
   // verilator lint_restore

   // For signal $in2, which had no assignment.
   // Assign to a random value.
   // verilator lint_save
   // verilator lint_off WIDTH
   assign L0_in2_a0[6:0] = L0_r_in2_a0;
   // verilator lint_restore

   // For signal $in3, which had no assignment.
   // Assign to a random value.
   // verilator lint_save
   // verilator lint_off WIDTH
   assign L0_in3_a0[4:0] = L0_r_in3_a0;
   // verilator lint_restore

   // For signal $in4, which had no assignment.
   // Assign to a random value.
   // verilator lint_save
   // verilator lint_off WIDTH
   assign L0_in4_a0[4:0] = L0_r_in4_a0;
   // verilator lint_restore

   // For signal $in5, which had no assignment.
   // Assign to a random value.
   // verilator lint_save
   // verilator lint_off WIDTH
   assign L0_in5_a0[7:0] = L0_r_in5_a0;
   // verilator lint_restore

   // For signal $in6, which had no assignment.
   // Assign to a random value.
   // verilator lint_save
   // verilator lint_off WIDTH
   assign L0_in6_a0[7:0] = L0_r_in6_a0;
   // verilator lint_restore

   // For random value for missing assignment.
   assign L0_r_in1_n1[31:0] = $random() ^ {31'b0, clk};
   always_ff @(posedge clk) L0_r_in1_a0[31:0] <= L0_r_in1_n1[31:0];

   // For random value for missing assignment.
   assign L0_r_in2_n1[31:0] = $random() ^ {31'b0, clk};
   always_ff @(posedge clk) L0_r_in2_a0[31:0] <= L0_r_in2_n1[31:0];

   // For random value for missing assignment.
   assign L0_r_in3_n1[31:0] = $random() ^ {31'b0, clk};
   always_ff @(posedge clk) L0_r_in3_a0[31:0] <= L0_r_in3_n1[31:0];

   // For random value for missing assignment.
   assign L0_r_in4_n1[31:0] = $random() ^ {31'b0, clk};
   always_ff @(posedge clk) L0_r_in4_a0[31:0] <= L0_r_in4_n1[31:0];

   // For random value for missing assignment.
   assign L0_r_in5_n1[31:0] = $random() ^ {31'b0, clk};
   always_ff @(posedge clk) L0_r_in5_a0[31:0] <= L0_r_in5_n1[31:0];

   // For random value for missing assignment.
   assign L0_r_in6_n1[31:0] = $random() ^ {31'b0, clk};
   always_ff @(posedge clk) L0_r_in6_a0[31:0] <= L0_r_in6_n1[31:0];



endgenerate




//
// Debug Signals
//

generate

   if (1) begin : DEBUG_SIGS

      logic [6:0] \@0$in1 ;
      assign \@0$in1 = L0_in1_a0;
      logic [6:0] \@0$in2 ;
      assign \@0$in2 = L0_in2_a0;
      logic [4:0] \@0$in3 ;
      assign \@0$in3 = L0_in3_a0;
      logic [4:0] \@0$in4 ;
      assign \@0$in4 = L0_in4_a0;
      logic [7:0] \@0$in5 ;
      assign \@0$in5 = L0_in5_a0;
      logic [7:0] \@0$in6 ;
      assign \@0$in6 = L0_in6_a0;
      logic [7:0] \@0$out1 ;
      assign \@0$out1 = L0_out1_a0;
      logic [7:0] \@0$out2 ;
      assign \@0$out2 = L0_out2_a0;
      logic [7:0] \@0$out3 ;
      assign \@0$out3 = L0_out3_a0;
      logic [7:0] \@0$out4 ;
      assign \@0$out4 = L0_out4_a0;
      logic  \@0$reset ;
      assign \@0$reset = L0_reset_a0;


   end

endgenerate




generate   // This is awkward, but we need to go into 'generate' context in the line that `includes the declarations file.